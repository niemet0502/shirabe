syntax = "proto3";
option go_package="/shelve";

// create shelve 
// update shelve
// remove a shelve 
// get users's shelve 
// get a shelve with its books

service ShelveService {
    rpc GetShelves(GetShelvesRequest) returns (GetShelvesResponse);
    rpc CreateShelf(CreateShelfRequest) returns (CreateShelfResponse);
    rpc UpdateShelf(UpdateShelfRequest) returns (UpdateShelfResponse);
    rpc RemoveShelf(RemoveShelfRequest) returns (RemoveShelfResponse);
    rpc GetShelf(RemoveShelfRequest) returns (CreateShelfResponse);
}

message RemoveShelfResponse {
    string message = 2; 
}

message RemoveShelfRequest {
    int32 shelfId = 1;
}

message UpdateShelfRequest {
    int32 id = 1; 
    string name = 2; 
    int32 userId = 3; 
}

message UpdateShelfResponse {
    Shelf shelf = 1;
}

message GetShelvesRequest {
    int32 userId = 1;
}

message GetShelvesResponse {
    repeated Shelf shelves = 1;
}

message Shelf {
    int32 id = 1; 
    string name = 2; 
    int32 userId = 3; 
}

message CreateShelfRequest {
    string name = 2; 
    int32 userId = 3; 
}

message CreateShelfResponse {
    Shelf shelf = 1; 
}

service BookShelfService {
    rpc AddBook(CreateBookShelf) returns (BookShelfResponse);
    rpc RemoveBook(CreateBookShelf) returns (RemoveBookShelfResponse);
    rpc SearchBookShelf(BookShelf) returns (BookShelvesResponse);
}

message RemoveBookShelfResponse {
    string message = 1;
}

message CreateBookShelf {
    int32 shelfId = 1; 
    int32 bookId = 2; 
}

message BookShelf {
    int32 id = 1; 
    int32 shelfId = 2; 
    int32 bookId = 3; 
}

message BookShelfResponse { 
    BookShelf bookshelf = 1;
}

message BookShelvesResponse {
    repeated BookShelf bookShelves = 1;
}



 



 