syntax = "proto3";
option go_package="/book";

// get a book 
// get books list by user 
// create a book 
// update a book -> set reading progress or update status
// remove a book

service Book {
    rpc GetBook(GetBookRequest) returns (GetBookResponse);
    rpc GetBooks(BooksRequest) returns (BooksResponse);
    rpc CreateBook(CreateBookRequest) returns (CreateBookResponse);
    rpc UpdateBook(BookEntity) returns (CreateBookResponse);
    rpc SearchBooks(SearchBooksRequest) returns (BooksResponse);
    rpc GetBooksByShelf(GetBooksByShelfRequest) returns (BooksResponse);
}

message GetBooksByShelfRequest {
    repeated int32 ids = 1;
}

message SearchBooksRequest {
    int32 userId = 1;
    string search = 2; 
    int32 status = 3;
}

message CreateBookRequest {
    string title = 2; 
    string author = 3; 
    string genre = 4; 
    int32 totalPages = 5; 
    int32 userId = 6;
    string cover = 7; 
    string description = 8; 
    string publicatedAt = 9; 
}

message CreateBookResponse {
    BookEntity book = 1;
}

message BookEntity {
    int32 id = 1; 
    string title = 2; 
    string author = 3; 
    string genre = 4; 
    int32 status = 5; 
    int32 totalPages = 6; 
    int32 readingProgress = 7; 
    int32 userId = 8;
    string cover = 9; 
    string description = 10; 
    string publicatedAt = 11; 
    string startReadingAt = 12; 
    string finishReadingAt = 13; 
    string slug = 14; 
}

message BooksRequest {
   int32 userId = 1; 
}

message BooksResponse {
 repeated BookEntity books = 1;
}

message GetBookRequest {
    string bookSlug = 1; 
}

message GetBookResponse {
    BookEntity book = 1;
}
